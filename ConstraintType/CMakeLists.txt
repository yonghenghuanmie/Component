cmake_minimum_required(VERSION 3.0)
set(PorjectVersion 1.0.0)

if(WIN32)
add_compile_options(/Zc:__cplusplus)
endif()

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED true)
project(ConstraintTypeExample20 VERSION ${PorjectVersion})
add_executable(ConstraintTypeExample20 ConstraintType.cpp)
target_include_directories(ConstraintTypeExample20 PUBLIC $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}> $<INSTALL_INTERFACE:include>)
unset(CMAKE_CXX_STANDARD)
unset(CMAKE_CXX_STANDARD_REQUIRED)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED true)
project(ConstraintTypeExample17 VERSION ${PorjectVersion})
add_executable(ConstraintTypeExample17 ConstraintTypeBackwardCompatibility.cpp)
target_include_directories(ConstraintTypeExample17 PUBLIC $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}> $<INSTALL_INTERFACE:include>)
unset(CMAKE_CXX_STANDARD)
unset(CMAKE_CXX_STANDARD_REQUIRED)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED)
project(ConstraintTypeExample14 VERSION ${PorjectVersion})
add_executable(ConstraintTypeExample14 ConstraintTypeBackwardCompatibility.cpp)
target_include_directories(ConstraintTypeExample14 PUBLIC $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}> $<INSTALL_INTERFACE:include>)
unset(CMAKE_CXX_STANDARD)
unset(CMAKE_CXX_STANDARD_REQUIRED)

project(ConstraintType VERSION ${PorjectVersion})
add_library(ConstraintType INTERFACE)
target_include_directories(ConstraintType INTERFACE $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}>)
install(FILES ConstraintType.h DESTINATION include)

enable_testing()
add_test(NAME RunExample14 COMMAND ConstraintTypeExample14)
add_test(NAME RunExample17 COMMAND ConstraintTypeExample17)
add_test(NAME RunExample20 COMMAND ConstraintTypeExample20)